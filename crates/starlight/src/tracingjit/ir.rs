use crate::{gc::cell::GcPointer, prelude::Structure};

pub enum Ir {
    Swap,
    PushLiteral(u32),
    PushInt(i32),
    PushTrue,
    PushFalse,
    PushUndef,
    PushNull,
    PushNaN,

    GetFunction(u32),

    EnterCall(u32),
    EnterNew(u32),

    NativeCall(u32),
    NativeNew(u32),
    CallBuiltin(u32, u32, u32),

    NewArray(u32),
    NewObject,
    Return,
    // used in inlined functions
    FastReturn,

    GuardNumber,
    GuardString,
    // arrays that utilize `ArrayStorage` for storing values is "small"
    GuardSmallArray,
    GuardObject,
    GuardCallable,
    GuardNativeFn(usize),
    GuardFalse,
    GuardTrue,

    AddNumber,
    AddString,
    AddSlow,
    SubNumber,
    SubSlow,
    DivNumber,
    DivSlow,
    MulNumber,
    MulSlow,
    RemNumber,
    RemSlow,
    ShrNumber,
    ShrSlow,
    ShlNumber,
    ShlSlow,
    UShrNumber,
    UShrSlow,
    OrNumber,
    OrSlow,
    AndNumber,
    AndSlow,
    XorNumber,
    XorSlow,
    In,

    EqNumber,
    EqString,
    EqSlow,
    StrictEqNumber,
    StrictEqString,
    StrictEqSlow,
    NeqNumber,
    NeqString,
    NeqSlow,
    NStrictEqNumber,
    NStrictEqString,
    NStrictEqSlow,
    GreaterNumber,
    GreaterString,
    GreaterEqNumber,
    GreaterEqSlow,
    LessNumber,
    LessString,
    LessSlow,
    LessEqNumber,
    LessEqSlow,

    InstanceOf,
    TypeOf,
    NotNumber,
    NotSlow,
    LogicalNot,
    PosNumber,
    PosSlow,
    NegNumber,
    NegSlow,

    Throw,
    PushCatch(usize),
    PopCatch,
    GetByIdNamed(u32, u32, GcPointer<Structure>),
    GetByIdSmallArray(u32),
    GetByIdSlow(u32),
    GetByValNumberSmallArray,
    GetByValSlow,
    PutByIdSlow(u32),
    PutByValSlow,

    PushEnv,
    PopEnv,

    GetVar(u32),
    SetVar(u32),
    SetGlobal(u32),
    GetGlobal(u32),
    DeclLet(u32),
    DeclConst(u32),
    PushThis,
    Dup,
    Pop,
    Spread,
    DeleteVar(u32),
    DeleteSlowById(u32),
    DeleteSlowByVal,
}
